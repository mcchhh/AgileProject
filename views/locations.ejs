<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Locations</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
  <link rel="stylesheet" href="style">
  <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
  <script src="https://www.cdnjs.com/libraries/proj4js"></script>
  <!-- Include Leaflet CSS and JavaScript libraries -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
  <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css" >





  <!-- Include your custom JavaScript file for map initialization -->
  <script src="map.js"></script>

    <style>
      /* Style for fixed header row */
      .table-container thead {
        position: sticky;
        top: 0;
        background-color: #343a40;
        color: white;
      }
      .table-container tr {
        background-color: #343a40;
        color: white;
      }
      /* Add CSS for the scrollable table container */
      .table-container {
        max-height: 450px; /* Set a maximum height for the container */
        overflow-y: auto; /* Enable vertical scrolling */
        border: 1px solid #ddd; /* Add a border for visualization */
        margin: 20px auto; /* Adjust margin as needed */
        margin-top: 80px;
        margin-bottom: 80px;
        width: 85%;
        /* margin-left: 200px; */
      }
  
      /* Adjust the table style if necessary */
      .table {
        width: 100%;
      }
  
  
      #filter-input {
        width: 450px; /* Set your preferred width here */
        background-color: whitesmoke;
        color: grey;
        line-height: 2;
      }
      /* Style the search button */
      .btn-primary {
        background-color: #007bff; /* Primary button background color */
        border-color: #007bff;
      }
    
      /* Style the reset button */
      .btn-secondary {
        background-color: lightslategray; /* Secondary button background color */
        border-color: lightslategray;
      }

        header {
          text-align: center;
          padding: 20px;
          position: relative;
          z-index: 1; /* Ensure the header content appears on top of the background */
        }
      
        nav {
          background-color: rgba(0, 0, 0, 0.5);
        }

        footer {
          padding: 20px;
          margin-top: 50px;
          background-color: #f8f9fa; /* Optional: Add a light background color to the footer for better readability */
        }
        /* button {
          margin-top: 80px;
        } */
        .button {
          padding: 6px 24px; 
          border: 2px solid #fff;
          background: transparent;
          border-radius: 6px;
          color: white;
        }

        .home::before{
  content:'';
  position: absolute;
  height:100%;
  width: 100%;
  background-color: rgba(0,0,0,0.6);
  z-index: 100;
  opacity: 0; 
  pointer-events: none;
  transition: all 0.5s ease-out;
} 

.home.show::before{
  opacity: 1;
  pointer-events: auto;
} 
/* Form */ 
.form_container {
    position: absolute; 
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(1.2);
    max-width:320px;
    width:100%;
    z-index: 101;
    background:#fff;
    padding:25px; 
    border-radius: 12px; 
    box-shadow: rgba(0,0,0,0.1);
    opacity:0;
    pointer-events: none;
    transition: all 0.4s ease-out;
}

.home.show .form_container {
  opacity: 1; 
  pointer-events: auto;
  transform: translate(-50%, -50%) scale(1);
}

/* .login_form.show,
.signup_form.show {
  display: block;
} */


.signup_form {
    display: none;
}

.form_container.active .signup_form{
  display: block;
}
.form_container.active .login_form{
  display: none;
}
.form_close {
    position: absolute;
    top: 10px; 
    right:20px; 
    color: #0b0217;
    font-size: 22px; 
    opacity:0.7;
    cursor: pointer; 
}

.form_container h2{
    font-size: 22px; 
    color: #0b0217; 
    text-align: center; 
}
.input_box {
    position: relative; 
    margin-top:30px; 
    width: 100%; 
    height: 40px; 
}

.input_box input {
    height: 100%; 
    width: 100%;
    border: none; 
    outline: none;
    padding: 0 30px; 
    color: #333;
    transition: all 0.2s ease; 
    border-bottom: 1.5px solid #aaaaaa;
}
.input_box input:focus {
    border-color: #7d2ae8;
}

.input_box i{
    position: absolute; 
    top:50%; 
    transform: translateY(-50%);
    font-size: 20px; 
    color: #707070;
}

.input_box i.email,
.input_box i.password,
.input_box i.user{
    left: 0; 
}

.input_box input:focus ~ i.email,
.input_box input:focus ~ i.password{
   color: #7d2ae8;
}

.input_box i.pw_hide {
    right:0; 
    font-size: 18px; 
    cursor: pointer;
}
.option_field {
    margin-top: 14px;
    display: flex; 
    align-items: center; 
    justify-content: space-between; 
}
.form_container a{
    color: #7d2ae8;
    font-size: 12px;
}
.form_container a:hover {
    text-decoration: underline;
}
.checkbox {
    display: flex; 
    column-gap: 8px;
    white-space: nowrap; 
}
.checkbox input {
    accent-color: #7d2ae8;
}
.checkbox label {
    font-size: 12px; 
    cursor: pointer;
    user-select: none;
    color: #0b0217;
}
.form_container .button{
    background: #7d2ae8; 
    margin-top: 30px; 
    width: 100%; 
    padding: 10px 0; 
    border-radius: 10px; 
    color: white;
}
.login_signup {
    font-size: 12px; 
    text-align: center; 
    margin-top: 15px;
}

/* Add this CSS to style the popup */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
}

.modal-content {
  background-color: #fff;
  text-align: center;
  padding: 20px;
  border-radius: 5px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.close {
  color: #aaa;
  float: right;
  font-size: 24px;
  font-weight: bold;
  cursor: pointer;
}

.close:hover {
  color: #000;
}

    </style>
</head>
<body>

  <!-- Header -->
  <header class="container-fluid bg-dark text-center py-3" >
    <h1 class="text-white">CarParko</h1>
  </header>

  <!-- Navigation Bar -->
  <nav class="navbar navbar-expand navbar-dark bg-dark">
    <div class="container">
      <ul class="navbar-nav mx-auto">
        <li class="nav-item">
          <a class="nav-link" href="home">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="locations">Locations</a>
        </li>
        <!-- <li class="nav-item">
          <a class="nav-link" href="reservations">Reservations</a>s
        </li> -->
        <!-- <li class="nav-item">
          <a class="nav-link" href="favourites">Favourites</a>
        </li> -->
        <li class="nav-item">
          <a class="nav-link" href="about">About</a>
        </li>
        <!-- <li class="nav-item">
          <a class="nav-link" href="signup">Log In</a> <!-- Updated link for the Sign Up page -->
        
      </ul>
      <button class="button" id="form-open">Login</button>
    </div>
  </nav>

  
     <!-- Home - login button section -->
     <section class="home">
      <div class="form_container">
        <i class="uil uil-times form_close"></i>
        <!-- Login form -->
        <div class="form login_form show">
          <form action="#">
            <h2>Login</h2>

            <div class="input_box">
              <input type="email" placeholder="Enter your email" required id="signedEmail" value="">
              <i class="uil uil-envelope-alt email"></i>
            </div>
            <div class="input_box">
              <input type="password" placeholder="Enter your password" required id="signedPassword" value="">
              <i class="uil uil-lock password"></i>
              <i class="uil uil-eye-slash pw_hide"></i>
            </div>

            <div class="option_field">
              <span class="checkbox">
                <input type="checkbox" id="check">
                <label for="check">Remember me</label>
              </span>
              <a href="#" class="forgot_pw">Forgot password?</a>
            </div>
            
            <button class="button" id="login-button" action="/locations" method="GET">Login Now</button>

            <div class="login_signup">Don't have an accout? <a href="#" id="signup">Signup</a></div>
          </form>
        </div>

        <!-- Sign Up -->
        <div class="form signup_form show">
          <form action="#">
            <h2>Signup</h2>

            <div class="input_box">
              <input type="name" placeholder="Enter your name" required id="signupName" value="">
              <i class="uil uil-user-circle user"></i>
            </div>
            <div class="input_box">
              <input type="email" placeholder="Enter your email" required id="signupEmail" value="">
              <i class="uil uil-envelope-alt email"></i>
            </div>
            <div class="input_box">
              <input type="password" placeholder="Create password" required id="signupPassword" value="">
              <i class="uil uil-lock password"></i>
              <i class="uil uil-eye-slash pw_hide"></i>
            </div>
            <div class="input_box">
              <input type="password" placeholder="Confirm password" required id="confirmPassword" value="">
              <i class="uil uil-lock password"></i>
              <i class="uil uil-eye-slash pw_hide"></i>
            </div>

            <!-- Display the error message here -->
            <div id="passwordMismatchError" style="color: red; display: none;">Passwords do not match</div>

            <!-- <a href="/reservedLot" class="button-like-like">Signup Now</a> -->

            <button class="button" type="submit">Signup Now</button>

            <div class="login_signup">Already have an accout? <a href="#" id="login">Login</a></div>

            <!-- Add this div for the popup -->
            <div id="signupSuccessModal" class="modal">
              <div class="modal-content">
                <span class="close" id="closeModal">&times;</span>
                <!-- <p>Your account has been created successfully! Click here to log in.</p> -->
                <p>Your account has been created successfully!</p>
                <!-- <button class="button" id="form-open">Click here to log in</button> -->
                  
              </div>
            </div>
          </form>
        </div>
       
      </div>
    </section>



  <!-- Search Bar -->
  <div class="container-fluid text-center py-3">
    <div class="d-flex justify-content-center">
    <form id="filter-form" class="form-inline">
      <h3>Search here:</h3>
      <br>
        <input id="filter-input" type="text" class="form-control mr-2" placeholder="Where would you like to go...">
        <br>
        <button type="submit" class="btn btn-primary">Search</button>
        <!-- Reset Button -->
        <button id="reset-button" class="btn btn-secondary">Reset</button>
      </div>
    </form>
  </div>





  <!-- Scrollable Table Container -->
  <div class="table-container">
    <table class="table">
      <!-- Table header -->
      <thead>
        <tr>
        
          <!-- <th>Carpark Number</th> -->
          <th>Address</th>
          <th>Total Lots</th>
          <th>Lots Available</th>
          <th>Free Parking</th>
          <th>Night Parking</th>
          <th>Short Term Parking</th>
          <th>Car Park Type</th>
          <th>Parking System</th>
        </tr>
      </thead>

      <tbody id="tableBody">
        <!-- Table rows will be dynamically generated here -->
        <% for (const carpark of carparksData) { %>
          <tr>
            
            <!-- <td><%= carpark.carparkNumber %></td> -->
            <!-- <% const matchingCarparkInfo = carparkInfoData.find(info => info.car_park_no === carpark.carparkNumber); %> -->
            <!--<% console.log('Matching carparkInfo for', carpark.carparkNumber, ':', matchingCarparkInfo); %>-->
            <td><a href="#map"><%= matchingCarparkInfo ? matchingCarparkInfo.address : 'N/A' %></a></td>
            <td><%= carpark.totalLots %></td>
            <td><%= carpark.lotsAvailable %></td>
            <td><%= matchingCarparkInfo ? matchingCarparkInfo.car_park_type : 'N/A' %></td>
            <td><%= matchingCarparkInfo ? matchingCarparkInfo.free_parking : 'N/A' %></td>
            <td><%= matchingCarparkInfo ? matchingCarparkInfo.night_parking : 'N/A' %></td>
            <td><%= matchingCarparkInfo ? matchingCarparkInfo.short_term_parking : 'N/A' %></td>
            <td><%= matchingCarparkInfo ? matchingCarparkInfo.type_of_parking_system: 'N/A' %></td>
          </tr>
          
        <% } %>
        <tr>
          <!-- <td colspan="4">Data count: <%= carparksData.length %></td> -->
        </tr>
      </tbody>
      
    </table>
  </div>


   <!-- Map -->
   <div id="map" style="width: 100%; height: 500px;"></div>
   <script>

    var map = L.map('map').setView([1.3521, 103.8198], 13);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Create a marker with a custom data attribute containing the coordinates
    var singaporeMarker = L.marker([1.3521, 103.8198]).addTo(map);
    singaporeMarker.bindPopup('Singapore');
    singaporeMarker.on('mouseover', function() {
        this.openPopup();
    });
    singaporeMarker.on('mouseout', function() {
        this.closePopup();
    });
    singaporeMarker.on('click', function() {
        // Open Google Maps in a new tab with the coordinates
        var googleMapsUrl = 'https://www.google.com/maps?q=1.3521,103.8198'; // Replace with your coordinates
        window.open(googleMapsUrl, '_blank');
    });

    var toaPayohMarker = L.marker([1.3362, 103.8426]).addTo(map);
    toaPayohMarker.bindPopup('Toa Payoh');
    toaPayohMarker.on('mouseover', function() {
        this.openPopup();
    });
    toaPayohMarker.on('mouseout', function() {
        this.closePopup();
    });
    toaPayohMarker.on('click', function() {
        var googleMapsUrl = 'https://www.google.com/maps?q=1.3362,103.8426'; // Replace with your coordinates
        window.open(googleMapsUrl, '_blank');
    });

    var sinMingMarker = L.marker([1.3633, 103.8342]).addTo(map);
    sinMingMarker.bindPopup('Sin Ming');
    sinMingMarker.on('mouseover', function() {
        this.openPopup();
    });
    sinMingMarker.on('mouseout', function() {
        this.closePopup();
    });
    sinMingMarker.on('click', function() {
        var googleMapsUrl = 'https://www.google.com/maps?q=1.3633,103.8342'; // Replace with your coordinates
        window.open(googleMapsUrl, '_blank');
    });

  </script>

  

  <!--Javascript for the Search Bar Filter-->
  <script>
   
    document.addEventListener('DOMContentLoaded', () => {
        const filterForm = document.getElementById('filter-form');
        const filterInput = document.getElementById('filter-input');
        const tableRows = document.querySelectorAll('.table tbody tr'); // Select all table rows
        const resetButton = document.getElementById('reset-button');

        // Function to reset the filter
        const resetFilter = () => {
          filterInput.value = ''; // Clear the search input

          tableRows.forEach((row) => {
            row.style.display = ''; // Show all table rows
          });
        };

        // Add event listener to the reset button
        resetButton.addEventListener('click', () => {
          resetFilter();
        });

        // Add event listener to the filter form 
        filterForm.addEventListener('submit', (event) => {
            event.preventDefault();
            const searchTerm = filterInput.value.toLowerCase();
            console.log(searchTerm); // Add this line to log the search term

            tableRows.forEach((row) => {
                const addressCell = row.querySelector('td:nth-child(2)'); // Select the second cell (address)
                const addressText = addressCell.textContent.toLowerCase();

                if (addressText.includes(searchTerm)) {
                    row.style.display = ''; // Show the row if the address matches the search term
                } else {
                    row.style.display = 'none'; // Hide the row if the address doesn't match
                }
            });
        });
    });
  </script>



  


  
  

  <!-- Footer -->
  <footer class="bg-dark text-light pt-3 pb-2">
    <div class="container text-left text-md-left">
        <div class="row text-left text-md-left">

            <div class="col-md-3 col-lg-3 col-xl-3 mx-auto mt-1">
                <h5 class="text-uppercase mb-4 font-weight-bold text-info">CarParko</h5>
                <hr class="mb-4">
                <p>It's a never ending battle of making your journeys smoother and enjoyable
                </p>

            </div>

            <div class="col-md-2 col col-lg-2 col-xl-2 mx-auto mt-1">
              <h5 class="text-uppercase mb-4 font-weight-bold text-info">Account</h5>
              <hr class="mb-4">
              <p>
                  <a href="#" class="text-light" style="text-decoration: none;">Profile</a>
              </p>
              <p>
                  <a href="#" class="text-light" style="text-decoration: none;">Settings</a>
              </p>
              <p>
                  <a href="#" class="text-light" style="text-decoration: none;">Billing</a>
              </p>
          </div>

          <div class="col-md-2 col col-lg-2 col-xl-2 mx-auto mt-1">
              <h5 class="text-uppercase mb-4 font-weight-bold text-info">Company</h5>
              <hr class="mb-4">
              <p>
                  <a href="#" class="text-light" style="text-decoration: none;">Help Center</a>
              </p>
              <p>
                  <a href="#" class="text-light" style="text-decoration: none;">Support</a>
              </p>
              <p>
                  <a href="#" class="text-light" style="text-decoration: none;">Privacy Statement</a>
              </p>
              <p>
                <a href="#" class="text-light" style="text-decoration: none;">Terms of use</a>
            </p>
          </div>


          <div class="col-md-4 col-lg-3 col-xl-3 mx-auto mt-1">
              <h5 class="text-uppercase mb-4 font-weight-bold text-info">Contacts</h5>
              <hr class="mb-4">
              <p>
                  <li class="fas fa-home mr-3">Based in Singapore </li>
              </p>
              <p>
                  <li class="fas fa-envelope mr-3">Email: carparko@gmail.com</li>
              </p>
              <p>
                  <li class="fas fa-phone mr-3">Tel: +65 6389 7837</li>
              </p>
              <p>
                  <li class="fas fa-print mr-3">Fax: +65 8273 8373</li>
              </p>
          </div>
      </div>

            <hr class="mb-4">
            <div class="row d-flex justify-content-center">
                <div> 
                    <p> 
                        Copyright 2023 All Rights Reserved By:
                        <a href="#" style="text-decoration: none;">
                            <strong class="text-info">CarParko</strong>
                        </a>
                    </p>
                </div>
            </div>
            <div class="row d-flex justify-content-center">
                <div class="text-center">
                    <ul class="list-unstyled list-inline">
                      <li class="list-inline-item">
                        <a href="#" class="text-light"><i class='bx bxl-facebook' ></i></a>
                    </li>
                    <li class="list-inline-item">
                        <a href="#" class="text-light"><i class='bx bxl-instagram'></i></a>
                    </li>
                    <li class="list-inline-item">
                        <a href="#" class="text-light"><i class='bx bxl-google' ></i></a>
                    </li>
                    <li class="list-inline-item">
                        <a href="#" class="text-light"><i class='bx bxl-linkedin' ></i></a>
                    </li>
                    <li class="list-inline-item">
                        <a href="#" class="text-light"><i class='bx bxl-youtube' ></i></a>
                    </li>
                    </ul>
                </div>
            </div>

        </div>
    </div>

  </footer>


  <script>
    const formOpenBtn = document.querySelector("#form-open"),
    home = document.querySelector(".home"),
    formContainer = document.querySelector(".form_container"),
    formCloseBtn = document.querySelector(".form_close"),
    signupBtn = document.querySelector("#signup"),
    signupForm = document.querySelector(".signup_form"),
    loginBtn = document.querySelector("#login"),
    loginForm = document.querySelector(".login_form"),
    pwShowHide = document.querySelectorAll(".pw_hide"),
    modalContent = document.querySelector(".model-content"),
    modal = document.getElementById("signupSuccessModal"),
    closeModalBtn = document.getElementById("closeModal");

    // Assuming the user has successfully signed up
    const signupEmailInput = document.getElementById('signupEmail');
    const signupPasswordInput = document.getElementById('signupPassword');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const passwordMismatchError = document.getElementById("passwordMismatchError");

    // New login-related JavaScript code
    const loginEmailInput = document.querySelector('.email input[type="email"]');
    const loginPasswordInput = document.querySelector('.password input[type="password"]');
    // const modalContent = document.querySelector(".modal-content");
    // const modal = document.getElementById("signupSuccessModal");
    // const closeModalBtn = document.getElementById("closeModal");
    // const loginButton = document.querySelector(".login_form button");
    // Find the login button element by its ID
    const loginButton = document.getElementById('login-button');

    // Store the input data in local storage
    localStorage.setItem('signupEmail', signupEmailInput.value);
    localStorage.setItem('signupPassword', signupPasswordInput.value);
    localStorage.setItem('confirmPassword', confirmPasswordInput.value);

    // Check if there is stored data in local storage
    const storedSignupEmail = localStorage.getItem('signupEmail');
    const storedSignupPassword = localStorage.getItem('signupPassword');
    const storedConfirmPassword = localStorage.getItem('confirmPassword');

    
    

    // If stored data exists, pre-fill the login form
    if (storedSignupEmail && storedSignupPassword && storedConfirmPassword) {
      loginEmailInput.value = storedSignupEmail;
      loginPasswordInput.value = storedSignupPassword;
    }


    formOpenBtn.addEventListener("click", () => home.classList.add("show"));
    formCloseBtn.addEventListener("click", () => {
      home.classList.remove("show");
      modal.style.display = "none"; // Hide the modal when closing the form
    });

    pwShowHide.forEach(icon => {
      icon.addEventListener("click", () => {
        let getPwInput = icon.parentElement.querySelector("input");
        if(getPwInput.type === "password"){
          getPwInput.type = "text";
          icon.classList.replace("uil-eye-slash", "uil-eye")
        }else{
          getPwInput.type = "password";
          icon.classList.replace("uil-eye", "uil-eye-slash")
        }
      })
    })

    

    signupBtn.addEventListener("click", (e) => {
      formContainer.classList.add("active");
      // Show the popup when the Signup Now button is clicked 
      modal.style.display = "none";
      signupForm.style.display ="block";
      loginForm.style.display = "none"; // Hide the login form 
       // Reset the input fields
      signupEmailInput.value = "";
      signupPasswordInput.value = "";
      confirmPasswordInput.value = "";
    });
    
    loginBtn.addEventListener("click", (e) => {
      e.preventDefault();
      formContainer.classList.remove("active");
      home.classList.add("show");
      // Show the login form when the "login" button is clicked 
      signupForm.style.display = "none"; // Hide the signup form 
      loginForm.style.display = "block"; 
      // Reset the input fields
      signedEmailInput.value = "";
      signedPasswordInput.value = "";
    });

    // Add an event listener for the signup form submission
    signupForm.addEventListener("submit", (e) => {
      e.preventDefault();
      // Store the email and password in local storage
      // localStorage.setItem("savedEmail", signupEmailInput);
      // localStorage.setItem("savedPassword", signupPasswordInput);
      const signupPasswordInput = document.getElementById("signupPassword").value;
      if (signupPasswordInput !== confirmPasswordInput.value) {
        passwordMismatchError.style.display = "block"; // Display the error message
      } else {
          // Passwords match, you can proceed with form submission
          // Reset the error message if previously shown
          passwordMismatchError.style.display = "none";

          // Perform other form submission actions here
          // formContainer.classList.add("active");
        // Show the popup when the Signup Now button is clicked
          modal.style.display = "block";
      }
    });

  //   loginButton.addEventListener("click", (e) => {
  //   e.preventDefault();

  //   // Get entered email and password
  //   const enteredEmail = loginEmailInput.value;
  //   const enteredPassword = loginPasswordInput.value;

  //   // Check if entered credentials match stored values
  //   if (enteredEmail === storedSignupEmail && enteredPassword === storedSignupPassword) {
  //     // Successful login, you can redirect or perform other actions here
  //     // For now, we'll just show a success message
  //     modalContent.innerHTML = "<p>Login successful!</p>";
  //     modal.style.display = "block";
  //   } else {
  //     // Display error message for incorrect credentials
  //     modalContent.innerHTML = "<p>Email or password is incorrect.</p>";
  //     modal.style.display = "block";
  //   }
  // });

  // Add a click event listener to the login button
    loginButton.addEventListener('click', () => {
      // Redirect the user to the loggedin route
      window.location.href = '/loggedinhome';
    });


    closeModalBtn.addEventListener("click", function() {
      home.classList.add("show"); // Hide the form and the modal when clicking 'x' in the modal
      modal.style.display = "none";
      formContainer.classList.add("active");
      // Show the login form when closing the popup with 'x'
      signupForm.style.display = "none";
      loginForm.style.display = "block";
      // home.classList.remove("show");
    });
    
    // Close the modal if the user clicks outside of it
    window.addEventListener("click", function(event) {
      if (event.target === modal) {
        home.classList.remove("show"); // Hide the form and the modal when clicking 'x' in the modal
        modal.style.display = "none";
        formContainer.classList.remove("active"); // Show the login form
        // Show the login form when clicking ouside the modal 
        signupForm.style.display = 'none';
        loginForm.style.display = "block";
      }
    });
    
    modalContent.addEventListener("click", () => {
      home.classList.add("show"); // Hide the form
      modal.style.display = "none"; // Hide the modal
      formContainer.classList.add("active"); // Show the login form
      // Show the login form when clicking ouside the modal 
      signupForm.style.display = 'none';
        loginForm.style.display = "block";
    });
     
  

  </script>



</body>
</html>


